from EoS import PCSAFT
from Parameters import Parameters
import numpy as np


############################################# ÁGUA+CO2 ################################################
#COMPOSIÇÕES BASEADAS DO TRABALHO: "Speeds of Sound in Binary Mixtures of Water and Carbon Dioxide at
# Temperatures from 273 K to 313 K and at Pressures up to 50 MPa"

class Data:

    def __int__(self):
        pass

    @staticmethod
    def data(set):

        # These dataset were extract from the paper: Speeds of Sound in Binary Mixtures
        #of Water and Carbon Dioxide at Temperatures from 273 K to 313 K and at Pressures up to 50 MPa (Table 5)

        #Composition of 0.9882 for H20 and 0.118 for CO2
        if set==0:
            T = np.array([273.17, 273.19, 273.20, 273.23, 273.14, 273.13, 273.13,
                          273.13, 273.13, 273.13, 273.13, 273.12, 273.13, 273.13,
                          273.13, 278.12, 278.19, 278.22, 278.19, 278.18, 278.14,
                          278.14, 278.17, 278.19, 278.18, 278.17, 278.17, 278.16,
                          278.16, 278.16, 278.15, 278.15, 278.15, 283.18, 283.18,
                          283.18, 283.20, 283.19, 283.19, 283.17, 283.18, 283.19,
                          283.19, 283.18, 283.19, 283.19, 288.21, 288.21, 288.21,
                          288.21, 288.21, 288.21, 288.21, 288.21, 288.22, 288.22,
                          288.22, 288.22, 288.22, 288.22, 288.23, 293.21, 293.21,
                          293.22, 293.20, 293.21, 293.22, 293.22, 293.22, 293.22,
                          293.23, 293.22, 293.22, 293.22, 293.23, 293.23, 298.21,
                          298.21, 298.22, 298.22, 298.24, 298.22, 298.21, 298.25,
                          298.25, 298.21, 298.38, 298.27, 303.24, 303.24, 303.24,
                          303.23, 303.24, 303.25, 303.25, 303.25, 303.25, 303.25,
                          303.25, 303.25, 303.26, 303.26, 303.26, 308.28, 308.27,
                          308.26, 308.22, 308.22, 308.23, 308.23, 308.23, 308.24,
                          308.25, 308.25, 308.24, 308.25, 313.24, 313.24, 313.21,
                          313.23, 313.22, 313.24, 313.21, 313.25, 313.25, 313.21,
                          313.22, 313.26, 313.23, 313.23, 313.23, 313.25])

            P = 1e6*np.array([3.97, 5.97, 7.97, 9.97, 9.97, 11.95, 14.94, 17.93,
                              19.93, 24.92, 29.90, 34.89, 39.87, 44.85, 49.82,
                              3.63, 3.99, 5.99, 7.99, 9.98, 9.98, 11.98, 11.96,
                              14.93, 17.93, 19.92, 24.91, 27.90, 29.90, 34.88,
                              39.86, 44.84, 49.82, 3.99, 4.99, 7.99, 9.99, 11.95,
                              14.96, 17.93, 19.94, 24.90, 29.89, 34.86, 44.80, 49.78,
                              4.99, 5.97, 7.98, 9.97, 9.98, 11.96, 17.93, 14.94, 19.93,
                              24.90, 29.88, 34.86, 39.84, 44.81, 49.78, 5.99, 7.98, 9.95,
                              9.98, 11.95, 14.94, 17.93, 19.93, 24.91, 29.89, 29.89, 34.87,
                              39.85, 44.82, 49.79, 5.50, 7.50, 9.96, 9.99, 14.95, 19.95,
                              24.95, 29.94, 34.88, 39.88, 44.81, 49.83, 6.09, 7.99, 9.98,
                              9.98, 11.95, 14.94, 17.93, 17.94, 19.93, 24.91, 29.90, 34.87,
                              39.85, 44.83, 49.80, 7.97, 9.97, 11.95, 14.94, 17.94, 19.93,
                              24.92, 29.90, 34.89, 39.87, 44.85, 44.87, 49.82, 7.66, 7.71,
                              7.74, 7.99, 8.20, 9.98, 9.99, 14.97, 19.96, 20.00, 24.98, 29.94,
                              34.94, 39.90, 44.89, 49.86])

            u_exp = np.array([1433.28, 1436.05, 1438.84, 1441.50, 1441.25, 1444.05,
                              1448.15, 1452.38, 1455.33, 1462.65, 1470.03, 1477.73,
                              1485.39, 1493.30, 1501.26, 1452.58, 1453.50, 1456.24,
                              1459.12, 1462.00, 1462.00, 1464.75, 1464.84, 1469.35,
                              1473.80, 1476.68, 1484.21, 1488.81, 1491.85, 1499.39,
                              1507.17, 1515.13, 1523.13, 1472.01, 1473.63, 1477.97,
                              1480.84, 1483.93, 1488.38, 1492.84, 1495.84, 1503.55,
                              1511.23, 1518.99, 1534.80, 1542.81, 1489.28, 1490.72,
                              1493.89, 1496.89, 1497.01, 1500.13, 1509.31, 1504.63,
                              1512.43, 1520.14, 1528.09, 1535.93, 1543.81, 1551.76,
                              1559.64, 1505.04, 1508.15, 1511.42, 1511.15, 1514.42,
                              1519.16, 1523.96, 1527.07, 1534.94, 1542.93, 1542.90,
                              1550.81, 1558.87, 1566.82, 1574.82, 1516.91, 1520.12,
                              1524.07, 1524.18, 1532.16, 1540.05, 1548.15, 1556.31,
                              1564.31, 1572.30, 1580.47, 1588.42, 1528.17, 1531.38,
                              1534.53, 1534.33, 1537.78, 1542.65, 1547.60, 1547.57,
                              1550.79, 1559.07, 1566.99, 1575.31, 1583.34, 1591.35,
                              1599.60, 1540.17, 1543.80, 1546.89, 1551.71, 1556.81,
                              1560.03, 1568.64, 1576.80, 1584.82, 1592.97, 1601.28,
                              1601.24, 1609.40, 1547.30, 1547.31, 1547.32, 1547.84,
                              1548.23, 1551.25, 1551.21, 1559.74, 1568.16, 1568.08,
                              1576.45, 1584.89, 1592.95, 1601.47, 1609.87, 1617.95])

        #Composition of 0.9934 for H20 and 0.0066 for CO2
        elif set==1:
            T = np.array([273.16, 273.16, 273.16, 273.16, 273.15, 273.17, 273.16, 273.18,
                          273.17, 273.19, 273.16, 273.16, 273.17, 273.17, 273.17, 278.18,
                          278.18, 278.18, 278.18, 278.17, 278.18, 278.19, 278.18, 278.17,
                          278.18, 278.18, 278.19, 278.19, 278.19, 283.19, 283.19, 283.20,
                          283.21, 283.21, 283.21, 283.19, 283.21, 283.21, 283.21, 283.21,
                          283.20, 283.20, 283.19, 283.19, 287.99, 287.99, 288.00, 288.21,
                          288.02, 288.21, 288.21, 288.21, 288.21, 288.21, 288.20, 288.20,
                          288.19, 288.18, 288.14, 288.11, 293.21, 293.20, 293.20, 293.22,
                          293.20, 293.23, 293.23, 293.23, 293.23, 293.24, 293.21, 293.23,
                          293.21, 293.22, 293.22, 298.21, 298.21, 298.21, 298.21, 298.21,
                          298.22, 298.19, 298.19, 298.19, 298.19, 298.19, 298.17, 298.17,
                          298.17, 298.18, 298.18, 298.18, 303.23, 303.22, 303.22, 303.22,
                          303.22, 303.22, 303.22, 303.23, 303.23, 303.24, 303.24, 303.25,
                          303.25, 308.26, 308.25, 308.33, 308.25, 308.28, 308.29, 308.30,
                          308.29, 308.28, 308.27, 308.27, 308.27, 308.27, 313.27, 313.27,
                          313.27, 313.21, 313.27, 313.29, 313.29, 313.29, 313.30, 313.30,
                          313.31, 313.31, 313.31, 313.31, 313.31])

            P = 1e6*np.array([4.01, 6.01, 8.0, 8.0, 10.02, 10.05, 14.99, 18.00, 20.00,
                              24.99, 30.08, 35.00, 40.00, 45.07, 50.05, 4.02, 6.03,
                              8.04, 10.00, 12.02, 14.99, 18.00, 20.00, 25.00, 30.00,
                              35.01, 40.08, 45.05, 50.03, 4.01, 6.01, 8.02, 10.02,
                              12.02, 15.00, 15.00, 18.00, 20.00, 25.00, 30.00, 35.01,
                              39.98, 45.00, 50.00, 4.02, 6.01, 8.00, 10.03, 10.02, 12.01,
                              15.00, 18.00, 20.00, 25.00, 30.00, 30.00, 35.00, 39.98,
                              44.97, 50.01, 4.02, 6.02, 8.02, 10.03, 10.01, 15.01, 18.00,
                              20.00, 24.99, 30.00, 30.01, 34.97, 40.00, 45.07, 50.04, 4.02,
                              5.00, 6.01, 8.01, 10.00, 9.99, 15.02, 18.00, 20.01, 20.01,
                              24.99, 29.95, 29.99, 34.93, 39.91, 44.99, 50.06, 5.01,
                              6.01, 8.02, 9.02, 10.02, 15.02, 18.02, 25.05, 30.08,
                              34.96, 39.94, 44.95, 49.94, 5.02, 8.02, 10.01, 10.04,
                              15.00, 18.02, 20.00, 24.96, 29.95, 34.93, 39.92, 44.97,
                              50.04, 5.01, 6.02, 8.02, 10.01, 10.01, 12.01, 15.00,
                              18.01, 20.00, 25.00, 30.00, 35.00, 40.01, 44.97, 50.04])

            u_exp = np.array([1422.71, 1425.57, 1428.44, 1428.66, 1431.11, 1431.57,
                              1438.32, 1443.04, 1446.08, 1453.90, 1462.19, 1469.98,
                              1478.13, 1486.53, 1494.93, 1444.15, 1448.02, 1450.37,
                              1453.70, 1456.15, 1461.41, 1466.26, 1469.11, 1476.97,
                              1484.96, 1493.11, 1501.40, 1509.70, 1517.85, 1464.54,
                              1467.36, 1470.55, 1473.15, 1476.41, 1481.02, 1481.33,
                              1485.70, 1489.01, 1496.92, 1504.92, 1513.14, 1521.31,
                              1529.65, 1537.96, 1480.87, 1484.04, 1487.09, 1490.59,
                              1490.24, 1494.04, 1498.91, 1503.50, 1506.68, 1514.78,
                              1522.72, 1522.78, 1531.00, 1539.04, 1547.21, 1555.29,
                              1496.61, 1499.78, 1503.07, 1506.22, 1506.16, 1514.33,
                              1519.19, 1522.65, 1530.60, 1538.79, 1538.72, 1546.85,
                              1555.10, 1563.45, 1571.50, 1510.04, 1511.52, 1513.05,
                              1516.36, 1519.50, 1519.60, 1527.84, 1532.45, 1535.79,
                              1535.88, 1543.95, 1552.09, 1552.11, 1560.62, 1568.49,
                              1577.07, 1585.28, 1522.15, 1524.13, 1527.58, 1529.16,
                              1530.89, 1539.19, 1544.27, 1555.79, 1564.07, 1572.35,
                              1580.45, 1589.02, 1597.17, 1532.39, 1537.47, 1541.00,
                              1540.81, 1549.62, 1554.44, 1557.67, 1565.98, 1574.73,
                              1582.63, 1591.05, 1599.21, 1608.22, 1540.53, 1542.60,
                              1545.53, 1548.98, 1549.32, 1552.52, 1557.96, 1562.73,
                              1565.96, 1574.99, 1583.09, 1591.53, 1599.81, 1608.37,
                              1617.16])

        # Composition of 0.9985 for H20 and 0.0015 for CO2
        elif set==2:
            T = np.array([])

            P = 1e6*np.array([])

            u_exp = np.array([])

        return T, P, u_exp


    @classmethod
    def ARD(cls, set=0, association=0, specification=0):

        R, sigma, Ek, mi, Eabk, Kab, Kij, x, A, B, C, D, molar_mass, code, num_sites = Parameters().parameters(set)
        T, P, u_exp = cls.data(set)
        u_calc      = np.zeros(len(T))
        SAFT        = PCSAFT(R, sigma, Ek, mi, Eabk, Kab, Kij, A, B, C, D)
        ite         = 0
        size        = len(u_exp)

        for i in range(len(T)):
            ite += 1
            u_calc[i] = SAFT.speed_of_sound(molar_mass, P[i], T[i], x, num_sites, code, association, specification)
            print(f'u(experimental): {u_exp[i]:.2f} ------------------------- u(calculated): {u_calc[i]:.2f} ------------------------- There are still missing {size-ite} calculations left')

        ARD = (100/len(T))*sum(abs((u_calc-u_exp)/u_exp))

        print(f'\nAverage relative deviation (ARD%): {ARD:.4f}')
